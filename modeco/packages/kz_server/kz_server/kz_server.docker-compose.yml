---
version: '3'
services:

# START SERVICE kafka_server.base
  kafka:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.kafka_server.base:5.4.0
    environment: ['KAFKA_HEAP_OPTS=-Xmx${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY} -Xms${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}','KAFKA_BROKER_ID=1','KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181','KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092${KZ_SERVER_KAFKA_KAFKA_ADVERTISED_LISTENERS}','KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT${KZ_SERVER_KAFKA_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}','KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT','KAFKA_AUTO_CREATE_TOPICS_ENABLE=true','KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1','KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0','KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR=1','KAFKA_MIN_INSYNC_REPLICAS=1','KAFKA_DEFAULT_REPLICATION_FACTOR=1','KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1','KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1','KAFKA_METRIC_REPORTERS=io.confluent.metrics.reporter.ConfluentMetricsReporter','CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS=kafka:9092','CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT=zookeeper:2181','CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS=1','CONFLUENT_METRICS_ENABLE=true','CONFLUENT_SUPPORT_CUSTOMER_ID=anonymous','KAFKA_LOG_RETENTION_HOURS=1']
    command: []
    volumes: ['package_kz_server_kafka_secrets_volume:/etc/kafka/secrets','package_kz_server_kafka_data_volume:/var/lib/kafka/data']
    ports: [${KZ_SERVER_KAFKA_PORTS}]
    networks: [package_overlay]
    deploy:
      mode: replicated
      replicas: ${KZ_SERVER_KAFKA_DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: '${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${KZ_SERVER_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      placement:
        constraints: [${KZ_SERVER_KAFKA_DEPLOY_PLACEMENT_CONSTRAINTS}]
      labels: [${KZ_SERVER_KAFKA_DEPLOY_LABELS}]
    labels: [${KZ_SERVER_KAFKA_LABELS}]
# END SERVICE kafka_server.base

# START SERVICE zookeeper.base
  zookeeper:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.zookeeper.base:5.4.0
    environment: ['ZOOKEEPER_CLIENT_PORT=2181','ZOOKEEPER_TICK_TIME=2000']
    command: []
    volumes: ['package_kz_server_zookeeper_secrets_volume:/etc/zookeeper/secrets','package_kz_server_zookeeper_data_volume:/var/lib/zookeeper/data','package_kz_server_zookeeper_log_volume:/var/lib/zookeeper/log']
    ports: []
    networks: [package_overlay]
    deploy:
      mode: replicated
      replicas: ${KZ_SERVER_ZOOKEEPER_DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: '${KZ_SERVER_ZOOKEEPER_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${KZ_SERVER_ZOOKEEPER_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${KZ_SERVER_ZOOKEEPER_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${KZ_SERVER_ZOOKEEPER_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      placement:
        constraints: [${KZ_SERVER_ZOOKEEPER_DEPLOY_PLACEMENT_CONSTRAINTS}]
      labels: [${KZ_SERVER_ZOOKEEPER_DEPLOY_LABELS}]
    labels: [${KZ_SERVER_ZOOKEEPER_LABELS}]
# END SERVICE zookeeper.base

networks: {package_overlay: { external: true }}
volumes: {package_kz_server_kafka_secrets_volume: { external: true },package_kz_server_kafka_data_volume: { external: true },package_kz_server_zookeeper_secrets_volume: { external: true },package_kz_server_zookeeper_data_volume: { external: true },package_kz_server_zookeeper_log_volume: { external: true }}

